openapi: "3.0.0"

info:
  description: Account store API for DLUHC Funding Service Design
  version: "0.1.0"
  title: Funding Service Design - Account store
paths:
  /account:
    get:
      summary: "Return the account data for the given email address or account id."
      description: "Given the account id or email address we return the json associated with the account, given the account exists."
      operationId: core.account.get_account
      parameters:
        - name: email_address
          in: query
          description: "The email being used for the account id look up, if both account_id and email_address is given then the look up will use the account_id instead"
          required: false
          schema:
            type: string
        - name: account_id
          in: query
          description: "The account id being used for the account id look up, if both account_id and email_address is given then the look up will use the account_id instead."
          required: false
          schema:
            type: string
      responses:
        200:
          description: The requested account exists, and the accounts json payload is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account'
        204:
          description: "The requested account doesn't exist."
    post:
      summary: "Post a new email, creating an new account with a unique account id in the account store."
      description: "Given an email we create a correponding account json in the account store."
      operationId: core.account.post_account_by_email
      parameters:
      - name: email_address
        in: query
        description: "The email being used for the account creation."
        required: true
        schema:
          type: string
      responses:
        200:
          description: "If the resource is successfully created then the created resource is returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account'
        409:
          description: "This email account has already been used to create an account"

components:
  schemas:
    account:
      type: object
      properties:
        id:
          type: string
          description: The unique id for the given account.
        emailAddress:
          type: string
          pattern: '(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$)'
          description: An email address.
          example: "test@cool.com"
        applications:
          type: array
          description: A list of application ids.
          example: '[ { "id" : "fdghdfghd"}, {"id" : "fdfg-safg-4et"} ]'
          items:
            $ref: "#/components/schemas/application_item"

    application_item:
      type: object
      properties:
        id:
          type: string
          description: The id of the application - should be the same as the id in the application store.
          example: "FEASFDFGDFG-45009029-sDFG3SDF"
